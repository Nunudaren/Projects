<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="classpath:applicationContext-base.xml"/>
    <import resource="classpath:applicationContext-confplusclient.xml"/>
    <import resource="classpath:applicationContext-redisclient.xml"/>
    <import resource="classpath:applicationContext-sequenceclient.xml"/>
    <import resource="classpath:applicationContext-distributedlock.xml"/>
    <import resource="classpath:applicationContext-persistence.xml"/>

    <bean id="redisClient" class="cn.caijiajia.redis.client.RedisClient">
        <property name="hostName" value="${redis.host.sequence.sequence}"/>
        <property name="port" value="${redis.port.sequence.sequence}"/>
        <property name="database" value="${redis.database.sequence.sequence}"/>
    </bean>

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url"
                  value="jdbc:mysql://${mysql.address.credittools}/credittools?useUnicode=true&amp;characterEncoding=utf8"/>
        <property name="username" value="${mysql.username.credittools}"/>
        <property name="password" value="${mysql.password.credittools}"/>
        <property name="initialSize" value="${jdbc.connection.initialSize}"/>
        <property name="minIdle" value="${jdbc.connection.minIdle}"/>
        <property name="maxActive" value="${jdbc.connection.maxActive}"/>
        <property name="maxWait" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="600"/>
        <property name="logAbandoned" value="true"/>
        <property name="jdbcInterceptors" value="ConnectionState;StatementFinalizer"/>
    </bean>

    <bean id="fileUpload" class="cn.caijiajia.cloud.service.impl.FileUploadToQiniu">
        <property name="accessKey" value="${qiniu.accessKey}"/>
        <property name="secretKey" value="${qiniu.secretKey}"/>
        <property name="bucketName" value="${qiniu.bucket.img}"/>
        <property name="imgUrl" value="${qiniu.url.img}"/>
    </bean>

    <bean id="taskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
          lazy-init="true">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="100"/>
        <property name="queueCapacity" value="1000"/>
        <property name="keepAliveSeconds" value="300"/>
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$AbortPolicy"/>
        </property>
    </bean>

    <bean id="hbChannel" class="java.lang.String">
        <constructor-arg value="${qihu.hb.channel}"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean id="confplusUrl" class="java.lang.String">
        <constructor-arg value="${url.confplus}"/>
    </bean>

    <bean id="creditDataUrl" class="java.lang.String">
        <constructor-arg value="${url.creditdata}"/>
    </bean>

    <bean id="userUrl" class="java.lang.String">
        <constructor-arg value="${url.user}"/>
    </bean>

    <bean id="userLoanUrl" class="java.lang.String">
        <constructor-arg value="${url.userloan}"/>
    </bean>

    <bean id="s3Service" class="cn.caijiajia.awsservice.S3Service">
        <constructor-arg value="${aws.s3.accessKey}" />
        <constructor-arg value="${aws.s3.secretKey}" />
    </bean>
    <bean id="s3StoreService" class="cn.caijiajia.s3util.mapper.S3StoreService" lazy-init="true">
        <property name="s3StoreBucketName" value="${aws.s3.accessKey}"/>
        <property name="s3StoreBucketNameInc" value="${aws.s3.accessKey}"/>
    </bean>
    <bean id="s3BoStoreMapper" class="cn.caijiajia.s3util.mapper.S3BoStoreMapper" lazy-init="true">
    </bean>
    <bean id="s3StoreMapper" class="cn.caijiajia.s3util.mapper.S3StoreMapper" lazy-init="true">
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:spring-config.properties</value>
        </property>
    </bean>
    <bean id="httpClient" class="cn.caijiajia.framework.httpclient.HttpClientTemplate">
        <constructor-arg type="int" value="200"/>
        <constructor-arg type="int" value="200"/>
        <constructor-arg type="int" value="10000"/>
        <constructor-arg type="int" value="20000"/>
    </bean>

    <bean id="zooKeeperTemplate" init-method="init" destroy-method="destroy"
          class="cn.caijiajia.framework.zookeeper.ZooKeeperTemplate">
        <property name="connectString" value="${zooKeeper.connectString}"/>
        <property name="sessionTimeout" value="15000"/>
        <property name="connectionTimeout" value="5000"/>
        <property name="connectionStateListeners" ref="connectionStateListeners"/>
    </bean>
    <util:list id="connectionStateListeners">
        <ref bean="jobExecutorRegister"/>
    </util:list>

</beans>
