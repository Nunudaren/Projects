package cn.caijiajia.credittools.mapper;

import cn.caijiajia.credittools.domain.HbUnionLoginLog;
import cn.caijiajia.credittools.domain.HbUnionLoginLogExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface HbUnionLoginLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    int countByExample(HbUnionLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    int deleteByExample(HbUnionLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `hb_union_login_log`",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `hb_union_login_log` (`id`, `mobile`, ",
        "`channel`, `uid`, `existed`, ",
        "`black_list`, `created_at`, ",
        "`updated_at`)",
        "values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, ",
        "#{channel,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{existed,jdbcType=BIT}, ",
        "#{blackList,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{updatedAt,jdbcType=TIMESTAMP})"
    })
    int insert(HbUnionLoginLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    int insertSelective(HbUnionLoginLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    List<HbUnionLoginLog> selectByExample(HbUnionLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`id`, `mobile`, `channel`, `uid`, `existed`, `black_list`, `created_at`, `updated_at`",
        "from `hb_union_login_log`",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    HbUnionLoginLog selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") HbUnionLoginLog record, @Param("example") HbUnionLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") HbUnionLoginLog record, @Param("example") HbUnionLoginLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(HbUnionLoginLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hb_union_login_log
     *
     * @mbggenerated
     */
    @Update({
        "update `hb_union_login_log`",
        "set `mobile` = #{mobile,jdbcType=VARCHAR},",
          "`channel` = #{channel,jdbcType=VARCHAR},",
          "`uid` = #{uid,jdbcType=VARCHAR},",
          "`existed` = #{existed,jdbcType=BIT},",
          "`black_list` = #{blackList,jdbcType=BIT},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP},",
          "`updated_at` = #{updatedAt,jdbcType=TIMESTAMP}",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(HbUnionLoginLog record);
}